{
  "uuid": "3de0e1d0-9a8a-4df8-ae5f-90fb345649c5",
  "name": "Yahoo_StockInfo",
  "description": "Get Yahoo Stock Info",
  "extraSearchTerms": [
    "Yahoo",
    "Stock"
  ],
  "tags": [
    "Yahoo",
    "Stock"
  ],
  "code": "\r\npublic class YahooQuoteFetcher {\r\n\r\n\tprivate static HashMap ${stocks:newName(java.util.HashMap)} \u003d new HashMap();\r\n\tprivate long ${updateIntervall:newName(long)};\r\n\r\n\tpublic static void main(String[] ${args:newName(\u0027java.lang.String[]\u0027)}) {\r\n\t\ttry {\r\n\t\t\tYahooQuoteFetcher ${fetcher:newName(com.ibm.thirdparty.YahooQuoteFetcher)} \u003d new YahooQuoteFetcher(5.0);\r\n\t\t\t${fetcher}.getData(\"AAPL\");\r\n\t\t\t// MarketDataBean bean \u003d fetcher.getData(\"AAPL\");\r\n\t\t\t// System.out.println(\"Price: \"+bean.getPrice());\r\n\r\n\t\t\tSet ${key:newName(java.util.Set)} \u003d ${stocks}.keySet();\r\n\t\t\tIterator ${itr:newName(java.util.Iterator)} \u003d ${key}.iterator();\r\n\t\t\twhile (${itr}.hasNext()) {\r\n\t\t\t\tMarketDataBean ${mdb:newName(com.ibm.thirdparty.YahooQuoteFetcher.MarketDataBean)} \u003d (MarketDataBean) ${stocks}.get(${itr}.next());\r\n\t\t\t\tSystem.out.println(${mdb}.getLastUpdated() + \"  \" + ${mdb}.getSymbol() + \"  \" + ${mdb}.getPrice() + \"  \"\r\n\t\t\t\t\t\t+ ${mdb}.getVolume() + \"  \" + ${mdb}.getChange());\r\n\t\t\t}\r\n\t\t} catch (Exception ${e:newName(java.lang.Exception)}) {\r\n\t\t\t${e}.printStackTrace();\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * @param updateIntervall\r\n\t */\r\n\tpublic YahooQuoteFetcher(double ${updateIntervallInSeconds:newName(double)}) {\r\n\t\tsuper();\r\n\t\tthis.${updateIntervall} \u003d (long) (${updateIntervallInSeconds} * 1000.0);\r\n\t}\r\n\r\n\tpublic MarketDataBean getData(String ${symbol:newName(java.lang.String)}) throws IOException {\r\n\t\tfetchData(${symbol});\r\n\t\treturn (MarketDataBean) ${stocks}.get(${symbol});\r\n\t}\r\n\r\n\tpublic synchronized void fetchData(String ${symbol2:newName(java.lang.String)}) throws IOException {\r\n\t\t/*\r\n\t\t * Fetch CSV data from Yahoo. The format codes (f\u003d) are: s\u003dsymbol, l1 \u003d\r\n\t\t * last, c1 \u003d change, d1 \u003d trade day, t1 \u003d trade time, o \u003d open, h \u003d\r\n\t\t * high, g \u003d low, v \u003d volume\r\n\t\t */\r\n\t\tURL ${ulr:newName(java.net.URL)} \u003d new URL(\"http://finance.yahoo.com/d/quotes.csv?s\u003d\" + ${symbol2} + \"\u0026f\u003dsl1c1vd1t1ohg\u0026e\u003d.csv\");\r\n\t\tURLConnection ${urlConnection:newName(java.net.URLConnection)} \u003d ${ulr}.openConnection();\r\n\t\tBufferedReader ${reader:newName(java.io.BufferedReader)} \u003d null;\r\n\t\ttry {\r\n\t\t\t${reader} \u003d new BufferedReader(new InputStreamReader(${urlConnection}.getInputStream()));\r\n\t\t\tString ${inputLine:newName(java.lang.String)};\r\n\t\t\twhile ((${inputLine} \u003d ${reader}.readLine()) !\u003d null) {\r\n\t\t\t\tString[] ${yahooStockInfo:newName(\u0027java.lang.String[]\u0027)} \u003d ${inputLine}.split(\",\");\r\n\t\t\t\tMarketDataBean ${stockInfo:newName(com.ibm.thirdparty.YahooQuoteFetcher.MarketDataBean)} \u003d new MarketDataBean();\r\n\t\t\t\t${stockInfo}.setSymbol(${yahooStockInfo}[0].replaceAll(\"\\\"\", \"\"));\r\n\t\t\t\t${stockInfo}.setPrice(Double.valueOf(${yahooStockInfo}[1]));\r\n\t\t\t\t${stockInfo}.setChange(Double.valueOf(${yahooStockInfo}[2]));\r\n\t\t\t\t${stockInfo}.setVolume(Double.valueOf(${yahooStockInfo}[3]));\r\n\t\t\t\t${stockInfo}.setLastUpdated(System.currentTimeMillis());\r\n\t\t\t\t${stocks}.put(${symbol2}, ${stockInfo});\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t} finally {\r\n\t\t\tif (${reader} !\u003d null)\r\n\t\t\t\t${reader}.close();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic class MarketDataBean {\r\n\r\n\t\tString ${symbol3:newName(java.lang.String)};\r\n\t\tdouble ${price:newName(double)};\r\n\t\tdouble ${change:newName(double)};\r\n\t\tdouble ${volume:newName(double)};\r\n\t\tlong ${lastUpdate:newName(long)};\r\n\r\n\t\tpublic String getSymbol() {\r\n\t\t\treturn ${symbol3};\r\n\t\t}\r\n\r\n\t\tpublic void setSymbol(String ${symbol4:newName(java.lang.String)}) {\r\n\t\t\tthis.${symbol3} \u003d ${symbol4};\r\n\t\t}\r\n\r\n\t\tpublic double getPrice() {\r\n\t\t\treturn ${price};\r\n\t\t}\r\n\r\n\t\tpublic void setPrice(double ${price2:newName(double)}) {\r\n\t\t\tthis.${price} \u003d ${price2};\r\n\t\t}\r\n\r\n\t\tpublic double getChange() {\r\n\t\t\treturn ${change};\r\n\t\t}\r\n\r\n\t\tpublic void setChange(double ${change2:newName(double)}) {\r\n\t\t\tthis.${change} \u003d ${change2};\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @return the volume\r\n\t\t */\r\n\t\tpublic double getVolume() {\r\n\t\t\treturn ${volume};\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param ${volume2}\r\n\t\t *            the volume to set\r\n\t\t */\r\n\t\tpublic void setVolume(double ${volume2:newName(double)}) {\r\n\t\t\tthis.${volume} \u003d ${volume2};\r\n\t\t}\r\n\r\n\t\tpublic long getLastUpdated() {\r\n\t\t\treturn ${lastUpdate};\r\n\t\t}\r\n\r\n\t\tpublic void setLastUpdated(long ${lastUpdate2:newName(long)}) {\r\n\t\t\tthis.${lastUpdate} \u003d ${lastUpdate2};\r\n\t\t}\r\n\t}\r\n}\r\n${import:import(java.io.BufferedReader, java.io.IOException, java.io.InputStreamReader, java.net.URL, java.net.URLConnection, java.util.HashMap, java.util.Iterator, java.util.Set)}${cursor}\r\n",
  "location": "JAVA",
  "dependencies": [
    {
      "groupId": "jre",
      "artifactId": "jre",
      "version": "0.0.0"
    }
  ]
}