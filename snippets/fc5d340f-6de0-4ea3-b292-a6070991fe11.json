{
  "uuid": "fc5d340f-6de0-4ea3-b292-a6070991fe11",
  "name": "SQLDB_CreateSchema",
  "description": "Create Schema",
  "extraSearchTerms": [
    "SQLDB",
    "Create",
    "Schema"
  ],
  "tags": [],
  "code": "// It is recommend NOT to use the default schema since it is correlated\r\n// to the generated user ID\r\nString ${schemaName:newName(java.lang.String)} \u003d \"ECODCNCSQL_EXTERNAL\";\r\n// create a unique table name to make sure we deal with our own table\r\n// If another version of this sample app binds to the same database, \r\n// this gives us some level of isolation\r\nString ${tableName:newName(java.lang.String)} \u003d ${schemaName} + \".\" + \"PAYROLL\" + System.currentTimeMillis();\r\nString ${sqlStatement:newName(java.lang.String)} \u003d \"CREATE SCHEMA \" + ${schemaName};\r\ntry {\r\n\t${stmt:var(java.sql.Statement)} \u003d ${con:var(java.sql.Connection)}.createStatement();\r\n\t// Create the CREATE SCHEMA SQL statement and execute it\t\t\t\r\n\t${stmt:var(java.sql.Statement)}.executeUpdate(${sqlStatement});\r\n\tSystem.out.println(\"Successfully Executed the Statement:\" + ${sqlStatement});\r\n} catch (SQLException ${e:newName(java.sql.SQLException)}) {\r\n\tSystem.out.println(\"Error creating schema: \" + ${e});\r\n}\r\n${import:import(java.sql.SQLException)}${cursor}\r\n",
  "location": "JAVA",
  "dependencies": [
    {
      "groupId": "jre",
      "artifactId": "jre",
      "version": "0.0.0"
    }
  ]
}